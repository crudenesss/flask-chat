services:

  postgres:
    container_name: ${POSTGRES_HOSTNAME}
    image: postgres:16
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATABASE=${PGDATABASE}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${PGDATABASE}'"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./setup/scripts/setup.sh:/docker-entrypoint-initdb.d/setup.sh
    networks:
      - app-network

  app:
    container_name: yapp-space
    build:
      context: .
    image: crudenesss/yapp-space
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - profile-picture-storage:/profile_pictures:rw
    networks:
      - app-network

  nginx:
    container_name: nginx
    image: nginx:1.27.2-bookworm
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
        condition: service_started
    volumes:
      - ./setup/confs/nginx.conf:/etc/nginx/nginx.conf
      - ./setup/certs/fullchain.pem:/etc/nginx/fullchain.pem:ro
      - ./setup/certs/privkey.pem:/etc/nginx/privkey.pem:ro
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  profile-picture-storage:
    driver: local
    name: profile-picture-storage
  postgres-data:
    driver: local
    name: postgres-data
